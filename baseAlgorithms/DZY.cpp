#include"iostream"
#include<vector>
#include"string"
#include <algorithm>
#include"queue";
using namespace std;
/*У DZY есть последовательность a, состоящая из n целых чисел.
Назовем последовательность ai,ai+1,...,aj (1≤i≤j≤n) подотрезком последовательности a. З
начение (j-i+1) обозначает длину подотрезка.DZY хочет найти максимальный по длине подотрезок a,
обладающий следующим свойством. Из подотрезка можно получить строго возрастающую последовательность,
выполнив изменение не более одного элемента подотрезка (разрешается изменить значение любого элемента 
подотрезка на любое целое значение).

Ваша задача — вывести длину искомого оптимального подотрезка.
Входные данные
В первой строке записано целое число n (1 ≤ n ≤ 105). В следующей строке записано n целых чисел a1,a2,...,an (1≤ai≤10^9).

Выходные данные
В единственной строке выведите ответ на задачу — максимальную длину подотрезка.

ПРИМЕР
 6
7 2 3 1 5 6
ОТВЕТ
5
*/

int l[100000];
int r[100000];
int mas[100000] ;
int main(){
    int n;
    cin >> n;
    for (int i = 0; i < n; i++){
        cin >> mas[i];
    }
    l[0] = 1;
    for (int i = 1; i < n; i++){
        if (mas[i]>mas[i - 1])
            l[i] = l[i - 1] + 1;
        else l[i] = 1;
    }
    r[n - 1] = 1;
    for (int i = n - 2; i >= 0; i--){
        if (mas[i + 1] > mas[i]){
            r[i ] = r[i+1] + 1;
        }
        else r[i] = 1;
    }
    int ans = 1;
    for (int i = 1; i < n - 1; i++){
        if (mas[i - 1] + 1 < mas[i + 1])
            ans = max(ans, l[i-1] + r[i+1] + 1);
        
    }
    for (int i = 0; i < n; i++){
        if (i != n-1)
            ans = max(ans, r[i + 1] + 1);
        if (i != 0)
            ans = max(ans, l[i - 1] + 1);
    }
    cout << ans;
}